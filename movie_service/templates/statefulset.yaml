apiVersion: v1
kind: PersistentVolume
metadata:
  name: movie-db-st
  labels:
    type: local
spec:
  storageClassName: local-path
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data"

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: movie-db
  namespace: {{ .Values.namespace }}  # Utilisation du namespace d√©fini
spec:
  selector:
    matchLabels:
      app: movie-db
  serviceName: "movie-db"
  replicas: 1
  template:
    metadata:
      labels:
        app: movie-db
    spec:
      containers:
      - name: movie-db
        image: postgres:12.1-alpine
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: movie-service-secret
              key: USER_NAME
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: movie-service-secret
              key: PASSWORD
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: movie-service-secret
              key: DATABASE
        volumeMounts:
        - name: movie-db-st  # Le nom ici correspond au PVC
          mountPath: /var/lib/postgresql/data/
      volumes:
      - name: movie-db-st  # Le nom doit correspondre au volumeMount ci-dessus
        persistentVolumeClaim:
          claimName: movie-db-st
  volumeClaimTemplates:
  - metadata:
      name: movie-db-st  # Ce nom doit correspondre au volumeMount et au volume
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi
      storageClassName: local-path
